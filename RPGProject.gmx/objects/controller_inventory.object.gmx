<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
equippableList = ds_list_create();
equippableMax = 10;
consumableList = ds_list_create();
consumableMax = 10;
miscList = ds_list_create();
miscMax = 10;
list[0] = equippableList;
list[1] = consumableList;
list[2] = miscList;

equippedList = ds_list_create();

ASCENDING = true;
DESCENDING = false;
sortOrientation = ASCENDING;

EQUIPPABLE = 0;
CONSUMABLE = 1;
MISCELLANEOUS = 2;
viewMode = EQUIPPABLE;

buttonsCreated = false;

inventory_add("item_sword", "item_hat", 
    "item_health_potion", "item_speed_potion", "item_coffee_cup");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_inventory_menu</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sorting the inventory
if (keyboard_check_pressed(ord('Z'))) {
    sortOrientation = !sortOrientation;
    for (var i = 0; i &lt; array_length_1d(list); i++) {
        ds_list_sort(list[i], sortOrientation);
    } 
    buttonsCreated = false;
    //get rid of any old buttons
    with (class_button) {
        if (sprite_index == spr_inv_button) {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create buttons
if (!buttonsCreated) {    
    switch (viewMode) {
        case EQUIPPABLE:        
            //create buttons with items
            if (ds_exists(equippableList, ds_type_list)) {
                for (var i = 0; i &lt; ds_list_size(equippableList); i++) {
                    with (instance_create(room_width/2, room_height/2 + i * 64, class_button)) {
                        sprite_index = spr_inv_button;
                        text = ds_list_find_value(other.equippableList, i);
                        overAction = set_text_color_white;
                        leaveAction = set_text_color_black;
                        textAlign = LEFT;
                        textXPos = 4;
                        textYPos = sprite_get_height(spr_inv_button)/2;
                    }
                }
            }
            break;
        case CONSUMABLE:
            
            //create buttons with items
            if (ds_exists(consumableList, ds_type_list)) {
                for (var i = 0; i &lt; ds_list_size(consumableList); i++) {
                    with (instance_create(room_width/2, room_height/2 + i * 64, class_button)) {
                        sprite_index = spr_inv_button;
                        text = ds_list_find_value(other.consumableList, i);
                        overAction = set_text_color_white;
                        leaveAction = set_text_color_black;
                        textAlign = LEFT;
                        textXPos = 4;
                        textYPos = sprite_get_height(spr_inv_button)/2;
                    }
                }
            }
            break;
        case MISCELLANEOUS:
            
            //create buttons with items
            if (ds_exists(miscList, ds_type_list)) {
                for (var i = 0; i &lt; ds_list_size(miscList); i++) {
                    with (instance_create(room_width/2, room_height/2 + i * 64, class_button)) {
                        sprite_index = spr_inv_button;
                        text = ds_list_find_value(other.miscList, i);
                        overAction = set_text_color_white;
                        leaveAction = set_text_color_black;
                        textAlign = LEFT;
                        textXPos = 4;
                        textYPos = sprite_get_height(spr_inv_button)/2;
                    }
                }
            }
            break;
        default: break;
    }
    buttonsCreated = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cleanup
for (var i = 0; i &lt; array_length_1d(list); i++) {
    if (ds_exists(list[i], ds_type_list)) {
        ds_list_destroy(list[i]);
    }
}

if (ds_exists(equippedList, ds_type_list)) {
    ds_list_destroy(equippedList);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
