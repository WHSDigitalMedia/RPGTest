<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
equippableList = ds_list_create();
equippableMax = 15;
consumableList = ds_list_create();
consumableMax = 15;
miscList = ds_list_create();
miscMax = 15;
list[0] = equippableList;
list[1] = consumableList;
list[2] = miscList;

equippedList = ds_list_create();

ASCENDING = true;
DESCENDING = false;
sortOrientation = ASCENDING;

//inventory screen
EQUIPPABLE = 0;
CONSUMABLE = 1;
MISCELLANEOUS = 2;
//combat screen
ITEMS = 3;
DESC = 4;
mode = EQUIPPABLE;

buttonsCreated = false;
itemSelected = "";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
//inventory_add("Dagger", "Golden Sword", "Imperial Chestplate", "Imperial Helmet", "Imperial Leggings", "Imperial Sandals", "Imperial Sword", "Iron Boots", "Iron Chestplate", "Iron Helmet", "Iron Leggings");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_inventory_menu</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sorting the inventory
if (keyboard_check_pressed(ord('Z'))) {
    sortOrientation = !sortOrientation;
    for (var i = 0; i &lt; array_length_1d(list); i++) {
        ds_list_sort(list[i], sortOrientation);
    } 
    buttonsCreated = false;
    //get rid of any old buttons
    with (class_button) {
        if (sprite_index == spr_inv_button) {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create buttons
if (!buttonsCreated) {    
    //get rid of any old buttons
    with (class_button) {
        if (sprite_index == spr_inv_button) {
            instance_destroy();
        }
    }
    
    var xPos = 544;
    var yPos = 0;
    switch (mode) {
        case EQUIPPABLE:        
            //create buttons with items
            if (ds_exists(equippableList, ds_type_list)) {
                for (var i = 0; i &lt; ds_list_size(equippableList); i++) {
                    if (i == 5) {
                        xPos = 800;
                        yPos = 0;
                    }
                    if (i == 10) {
                        xPos = 1056;
                        yPos = 0;
                    } 
                    with (instance_create(xPos, 256 + yPos * 64, class_button)) {
                        sprite_index = spr_inv_button;
                        text = ds_list_find_value(other.equippableList, i);
                        overAction = show_inv_desc;
                        leaveAction = set_text_color_black;
                        clickAction = inventory_equip;
                        textAlign = LEFT;
                        textXPos = -sprite_width/2 + 4;
                    }
                    yPos++;
                }
            }
            break;
        case CONSUMABLE: 
            //create buttons with items
            if (ds_exists(consumableList, ds_type_list)) {
                for (var i = 0; i &lt; ds_list_size(consumableList); i++) {
                    if (i == 10) {
                        xPos = 1056;
                        yPos = 0;
                    } 
                    if (i == 5) {
                        xPos = 800;
                        yPos = 0;
                    }
                    with (instance_create(xPos, 256 + yPos * 64, class_button)) {
                        sprite_index = spr_inv_button;
                        text = ds_list_find_value(other.consumableList, i);
                        overAction = show_inv_desc;
                        leaveAction = set_text_color_black;
                        clickAction = inventory_equip;
                        textAlign = LEFT;
                        textXPos = -sprite_width/2 + 4;
                    }
                    yPos++;
                }
            }
            break;
        case MISCELLANEOUS:
            //create buttons with items
            if (ds_exists(miscList, ds_type_list)) {
                for (var i = 0; i &lt; ds_list_size(miscList); i++) {
                    if (i == 10) {
                        xPos = 1056;
                        yPos = 0;
                    } 
                    if (i == 5) {
                        xPos = 800;
                        yPos = 0;
                    }
                    with (instance_create(xPos, 256 + yPos * 64, class_button)) {
                        sprite_index = spr_inv_button;
                        text = ds_list_find_value(other.miscList, i);
                        overAction = show_inv_desc;
                        leaveAction = set_text_color_black;
                        clickAction = inventory_equip;
                        textAlign = LEFT;
                        textXPos = -sprite_width/2 + 4;
                    }
                    yPos++;
                }
            }
            break;
        default: break;
    }
    
    if (ds_exists(equippedList, ds_type_list)) {
        for (var i = 0; i &lt; ds_list_size(equippedList); i++) {
            with (instance_create(192, 416 + i * 64, class_button)) {
                sprite_index = spr_inv_button;
                text = ds_list_find_value(other.equippedList, i);
                overAction = show_inv_desc;
                leaveAction = set_text_color_black;
                clickAction = inventory_unequip;
                textAlign = LEFT;
                textXPos = -sprite_width/2 + 4;
            }
        }
    }
    
    buttonsCreated = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_combat_interaction</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>ITEMS</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the item buttons
if (controller_combat.mode == controller_combat.INVENTORY) {
    if (!buttonsCreated) {
        //create buttons with items
        if (ds_exists(consumableList, ds_type_list)) {
            for (var i = 0; i &lt; ds_list_size(consumableList); i++) {
                with (instance_create(class_player.x, class_player.y + i * 64, class_button)) {
                    sprite_index = spr_inv_button;
                    text = ds_list_find_value(other.consumableList, i);
                    overAction = set_text_color_white;
                    leaveAction = set_text_color_black;
                    clickAction = inventory_consume_item;
                    altClickAction = toggle_inv_desc;
                    textAlign = LEFT;
                    textXPos = -sprite_width/2 + 4;
                }
            }
        }
        buttonsCreated = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>DESC</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a button to go back
if (!buttonsCreated) {
    //clear out all the old buttons
    with (class_button) {
        if (clickAction != display_inv) {
            instance_destroy();
        }
    }

    with (instance_create(room_width/2, room_height/2, class_button)) {
        sprite_index = spr_inv_button;
        text = "Return to items"
        overAction = set_text_color_white;
        leaveAction = set_text_color_black;
        clickAction = toggle_inv_desc;
        textAlign = LEFT;
        textXPos = -sprite_width/2 + 4;
        mode = SINGLE_USE;     
    }
    buttonsCreated = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Buttons created script
if (room != rm_inventory_menu &amp;&amp; room != rm_combat_interaction) {
    buttonsCreated = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>itemSelected = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cleanup
for (var i = 0; i &lt; array_length_1d(list); i++) {
    if (ds_exists(list[i], ds_type_list)) {
        ds_list_destroy(list[i]);
    }
}

if (ds_exists(equippedList, ds_type_list)) {
    ds_list_destroy(equippedList);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_combat_interaction</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw player stats
draw_text(room_width/3 - 128, 64 + 48 * 0, "Power");
draw_text(room_width/3 - 128, 64 + 48 * 1, "C Power");
draw_text(room_width/3 - 128, 64 + 48 * 2, "Speed");
draw_text(room_width/3 - 128, 64 + 48 * 3, "Defense");
draw_text(room_width/3 - 128, 64 + 48 * 4, "C Defense");
draw_text(room_width/3 - 128, 64 + 48 * 5, "HP");
draw_text(room_width/3 - 128, 64 + 48 * 6, "MP");

for (var i = 0; i &lt; array_length_1d(class_player.stat); i++) {
    draw_text(room_width/3, 64 + i * 48, class_player.stat[i]);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>DESC</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the item descriptions

ini_open("item_data.ini");

if (ini_section_exists(itemSelected)) {
    var desc = ini_read_string(itemSelected, "desc", "");
    draw_text(room_width/2, room_height * 0.75, desc);
}

ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_inventory_menu</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the item descriptions

ini_open("item_data.ini");

if (ini_section_exists(itemSelected)) {
    var desc = ini_read_string(itemSelected, "desc", "");
    var spr = asset_get_index(ini_read_string(itemSelected, "spr", ""));
    draw_sprite_ext(spr, 0, 416, 624, 2, 2, 0, image_blend, 1);
    draw_text(480, 608, "Description: " + desc);
    
    var num = "";
    for (var i = 1; i &lt; 3; i++) {
        var stat = ini_read_real(itemSelected, "stat" + string(i), 0);
        var amt = ini_read_real(itemSelected, "amt" + string(i), 0);
        
        if (amt != 0) {
            switch (stat) {
                case 0: 
                    num += "Power: " + string(amt);
                    break;
                case 1:
                    num += "C Power: " + string(amt);
                    break;
                case 2:
                    num += "Speed: " + string(amt);
                    break;
                case 3:
                    num += "Defense: " + string(amt);
                    break;
                case 4:
                    num += "C Defense: " + string(amt);
                    break;
                case 5:
                    num += "HP: " + string(amt);
                    break;
                case 6:
                    num += "MP: " + string(amt);
                    break;
                default: break;
            }   
            num += "   ";
        }
    }
    draw_text(480, 640, num);
}

ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw player stats
draw_sprite_ext(spr_player_idle, 0, 192, 96, 5, 5, 0, image_blend, image_alpha);

draw_set_halign(fa_center); 
draw_text(192, 192, "Flan");

draw_set_halign(fa_left);
draw_text(64, 192 + 32 * 1, "Power: " + string(class_player.stat[0]));
draw_text(64, 192 + 32 * 2, "C Power: " + string(class_player.stat[1]));
draw_text(64, 192 + 32 * 3, "Speed: " + string(class_player.stat[2]));
draw_text(64, 192 + 32 * 4, "Defense: " + string(class_player.stat[3]));
draw_text(192, 192 + 32 * 1, "C Defense: " + string(class_player.stat[4]));
draw_text(192, 192 + 32 * 2, "HP: " + string(class_player.stat[5]));
draw_text(192, 192 + 32 * 3, "MP: " + string(class_player.stat[6]));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
